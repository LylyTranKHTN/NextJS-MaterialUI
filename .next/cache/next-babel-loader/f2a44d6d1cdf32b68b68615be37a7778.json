{"ast":null,"code":"var _jsxFileName = \"D:\\\\LL\\\\LL\\\\ClientWeb\\\\src\\\\components\\\\gridList\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { ListSubheader, ClickAwayListener } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n\nfunction TitlebarGridList(props) {\n  const {\n    tileData\n  } = props;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, props.label)), tileData.map(tile => __jsx(ClickAwayListener, {\n    onClickAway: () => props.onClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }\n    }, tile.cost),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nTitlebarGridList.propTypes = {\n  label: PropTypes.string,\n  tileData: PropTypes.arrayOf({\n    img: PropTypes.string,\n    title: PropTypes.string,\n    cost: PropTypes.number\n  }),\n  onClick: PropTypes.func\n};\nTitlebarGridList.defaultProps = {\n  label: 'Hot Item December',\n  tileData: [{\n    img: 'images/bg.jpg',\n    title: 'title',\n    cost: 10000000\n  }, {\n    img: 'images/bg3.jpg',\n    title: 'title',\n    cost: 20000000\n  }, {\n    img: 'images/bg2.jpg',\n    title: 'title',\n    cost: 17000000\n  }],\n  onClick: () => {}\n};\nexport default TitlebarGridList;","map":{"version":3,"sources":["D:/LL/LL/ClientWeb/src/components/gridList/index.js"],"names":["React","PropTypes","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","ClickAwayListener","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","TitlebarGridList","props","tileData","classes","label","map","tile","onClick","item","img","title","cost","propTypes","string","arrayOf","number","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { ListSubheader, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}));\r\n\r\nfunction TitlebarGridList(props) {\r\n  const { tileData } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">{props.label}</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map((tile) => (\r\n          <ClickAwayListener onClickAway={() => props.onClick(item)}>\r\n            <GridListTile key={tile.img}>\r\n              <img src={tile.img} alt={tile.title} />\r\n              <GridListTileBar\r\n                title={tile.title}\r\n                subtitle={<span>{tile.cost}</span>}\r\n              />\r\n            </GridListTile>\r\n          </ClickAwayListener>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitlebarGridList.propTypes = {\r\n  label: PropTypes.string,\r\n  tileData: PropTypes.arrayOf({\r\n    img: PropTypes.string,\r\n    title: PropTypes.string,\r\n    cost: PropTypes.number,\r\n  }),\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nTitlebarGridList.defaultProps = {\r\n  label: 'Hot Item December',\r\n  tileData: [\r\n    {\r\n      img: 'images/bg.jpg',\r\n      title: 'title',\r\n      cost: 10000000,\r\n    },\r\n    {\r\n      img: 'images/bg3.jpg',\r\n      title: 'title',\r\n      cost: 20000000,\r\n    },\r\n    {\r\n      img: 'images/bg2.jpg',\r\n      title: 'title',\r\n      cost: 17000000,\r\n    },\r\n  ],\r\n  onClick: () => {},\r\n}\r\n\r\nexport default TitlebarGridList;\r\n"]},"metadata":{},"sourceType":"module"}