{"ast":null,"code":"var _jsxFileName = \"D:\\\\nextjs\\\\shoponline\\\\src\\\\components\\\\CustomDropdown\\\\CustomDropdown.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { Grow, Grid, Paper } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/components/customDropdownStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function CustomDropdown(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClose = param => {\n    setAnchorEl(null);\n\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n\n  const handleCloseAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    dropdownHeader,\n    caret,\n    hoverColor,\n    left,\n    rtlActive,\n    noLiPadding\n  } = props;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretActive]: Boolean(anchorEl),\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  let icon = null;\n\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = __jsx(props.buttonIcon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      });\n      break;\n\n    case \"string\":\n      icon = __jsx(Icon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      }, props.buttonIcon);\n      break;\n\n    default:\n      icon = null;\n      break;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Button, _extends({\n    \"aria-label\": \"Notifications\",\n    \"aria-owns\": anchorEl ? \"menu-list\" : null,\n    \"aria-haspopup\": \"true\"\n  }, buttonProps, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), icon, buttonText !== undefined ? buttonText : null, caret ? __jsx(\"b\", {\n    className: caretClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 20\n    }\n  }) : null)), __jsx(Popper, {\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    transition: true,\n    disablePortal: true,\n    placement: dropup ? left ? \"top-start\" : \"top\" : left ? \"bottom-start\" : \"bottom\",\n    className: classNames({\n      [classes.popperClose]: !anchorEl,\n      [classes.popperResponsive]: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, () => __jsx(Grow, {\n    in: Boolean(anchorEl),\n    id: \"menu-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(Paper, {\n    className: classes.dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(ClickAwayListener, {\n    onClickAway: handleCloseAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, dropdownList.map(m => __jsx(Grid, {\n    item: true,\n    sm: 12 / dropdownList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(MenuList, {\n    role: \"menu\",\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, dropdownHeader !== undefined ? __jsx(MenuItem, {\n    onClick: () => handleClose(dropdownHeader),\n    className: classes.dropdownHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, dropdownHeader) : null, m.subMenu && m.subMenu.map((prop, key) => {\n    if (prop.divider) {\n      return __jsx(Divider, {\n        key: key,\n        onClick: () => handleClose(\"divider\"),\n        className: classes.dropdownDividerItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return __jsx(MenuItem, {\n      key: key,\n      onClick: () => handleClose(prop),\n      className: dropdownItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 27\n      }\n    }, prop.title);\n  }))))))))));\n}\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\",\n  dropup: true\n};\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\"black\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["D:/nextjs/shoponline/src/components/CustomDropdown/CustomDropdown.js"],"names":["React","classNames","PropTypes","makeStyles","MenuItem","MenuList","ClickAwayListener","Grow","Grid","Paper","Divider","Icon","Popper","Button","styles","useStyles","CustomDropdown","props","anchorEl","setAnchorEl","useState","handleClick","event","contains","target","currentTarget","handleClose","param","onClick","handleCloseAway","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","Boolean","caretRTL","dropdownItem","dropdownItemRTL","icon","undefined","popperClose","popperResponsive","dropdown","map","m","length","menuList","subMenu","prop","key","divider","dropdownDividerItem","title","defaultProps","propTypes","oneOf","node","oneOfType","object","string","array","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { Grow, Grid, Paper } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\";\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-kit-react/components/customDropdownStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomDropdown(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleClose = param => {\n    setAnchorEl(null);\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n  const handleCloseAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(null);\n  };\n  const classes = useStyles();\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    dropdownHeader,\n    caret,\n    hoverColor,\n    left,\n    rtlActive,\n    noLiPadding\n  } = props;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretActive]: Boolean(anchorEl),\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  let icon = null;\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = <props.buttonIcon className={classes.buttonIcon} />;\n      break;\n    case \"string\":\n      icon = <Icon className={classes.buttonIcon}>{props.buttonIcon}</Icon>;\n      break;\n    default:\n      icon = null;\n      break;\n  }\n  return (\n    <div>\n      <div>\n        <Button\n          aria-label=\"Notifications\"\n          aria-owns={anchorEl ? \"menu-list\" : null}\n          aria-haspopup=\"true\"\n          {...buttonProps}\n          onClick={handleClick}\n        >\n          {icon}\n          {buttonText !== undefined ? buttonText : null}\n          {caret ? <b className={caretClasses} /> : null}\n        </Button>\n      </div>\n      <Popper\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        transition\n        disablePortal\n        placement={\n          dropup\n            ? left\n              ? \"top-start\"\n              : \"top\"\n            : left\n            ? \"bottom-start\"\n            : \"bottom\"\n        }\n        className={classNames({\n          [classes.popperClose]: !anchorEl,\n          [classes.popperResponsive]: true\n        })}\n      >\n        {() => (\n          <Grow\n            in={Boolean(anchorEl)}\n            id=\"menu-list\"\n          >\n            <Paper className={classes.dropdown}>\n              <ClickAwayListener onClickAway={handleCloseAway}>\n                <Grid container>\n                  {dropdownList.map((m) => (\n                    <Grid item sm={12/dropdownList.length}>\n                    <MenuList role=\"menu\" className={classes.menuList}>\n                      {dropdownHeader !== undefined ? (\n                        <MenuItem\n                          onClick={() => handleClose(dropdownHeader)}\n                          className={classes.dropdownHeader}\n                        >\n                          {dropdownHeader}\n                        </MenuItem>\n                      ) : null}\n                      {m.subMenu && m.subMenu.map((prop, key) => {\n                        if (prop.divider) {\n                          return (\n                            <Divider\n                              key={key}\n                              onClick={() => handleClose(\"divider\")}\n                              className={classes.dropdownDividerItem}\n                            />\n                          );\n                        }\n                        return (\n                          <MenuItem\n                            key={key}\n                            onClick={() => handleClose(prop)}\n                            className={dropdownItem}\n                          >\n                            {prop.title}\n                          </MenuItem>\n                        );\n                      })}\n                    </MenuList>\n                    </Grid>\n                  ))}\n                </Grid>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\",\n  dropup: true,\n};\n\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\n    \"black\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}