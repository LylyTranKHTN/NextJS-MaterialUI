{"ast":null,"code":"var _jsxFileName = \"D:\\\\LL\\\\LL\\\\ClientWeb\\\\src\\\\components\\\\category\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport { Cart } from 'components';\n\nconst Category = props => {\n  const {\n    pages,\n    onChangePage,\n    nCol,\n    nRow,\n    data\n  } = props;\n  const sizePerPage = nCol * nRow;\n  let _pages = pages;\n  const [_page, setPage] = React.useState(props.page);\n  const [_data, setData] = React.useState(data);\n  React.useEffect(() => {\n    if (!props.isServerPaging) {\n      _pages = Math.ceil(data / sizePerPage);\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!props.isServerPaging) {\n      setData(data.slice((_page - 1) * sizePerPage, _page * sizePerPage));\n    }\n  }, [_page]);\n  /**\r\n   * Handle change page\r\n   * @param {Object} e event\r\n   * @param {Number} page\r\n   */\n\n  const handleChangePage = (e, page) => {\n    setPage(page);\n    onChangePage(page);\n  };\n\n  console.log('page', _page);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, _data.map((item, index) => __jsx(Grid, {\n    key: index,\n    item: true,\n    xs: 6,\n    sm: 12 / nCol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Cart, _extends({}, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })))), __jsx(Pagination, {\n    count: _pages,\n    page: _page,\n    onChange: handleChangePage,\n    showFirstButton: true,\n    showLastButton: true,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nCategory.propTypes = {\n  data: PropTypes.instanceOf(Array),\n  nCol: PropTypes.number,\n  nRow: PropTypes.number,\n  page: PropTypes.number,\n  onChangePage: PropTypes.func,\n  pages: PropTypes.number,\n  isServerPaging: PropTypes.bool\n};\nCategory.defaultProps = {\n  data: [],\n  nCol: 4,\n  nRow: 5,\n  page: 1,\n  pages: 13,\n  onChangePage: () => {},\n  isServerPaging: false\n};\nexport default Category;","map":{"version":3,"sources":["D:/LL/LL/ClientWeb/src/components/category/index.js"],"names":["React","PropTypes","Grid","Pagination","Cart","Category","props","pages","onChangePage","nCol","nRow","data","sizePerPage","_pages","_page","setPage","useState","page","_data","setData","useEffect","isServerPaging","Math","ceil","slice","handleChangePage","e","console","log","map","item","index","propTypes","instanceOf","Array","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Cart } from 'components';\r\n\r\nconst Category = (props) => {\r\n  const { pages, onChangePage, nCol, nRow, data } = props;\r\n  const sizePerPage = nCol * nRow;\r\n  let _pages = pages;\r\n  const [_page, setPage] = React.useState(props.page);\r\n  const [_data, setData] = React.useState(data);\r\n  React.useEffect(() => {\r\n    if (!props.isServerPaging) {\r\n      _pages = Math.ceil(data/sizePerPage);\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (!props.isServerPaging) {\r\n      setData(data.slice((_page - 1) * sizePerPage, _page * sizePerPage));\r\n    }\r\n  }, [_page]);\r\n\r\n  /**\r\n   * Handle change page\r\n   * @param {Object} e event\r\n   * @param {Number} page\r\n   */\r\n  const handleChangePage = (e, page) => {\r\n    setPage(page);\r\n    onChangePage(page);\r\n  }\r\n\r\n  console.log('page', _page);\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {_data.map((item, index) => (\r\n        <Grid key={index} item xs={6} sm={12/nCol} >\r\n          <Cart\r\n            {...item}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Pagination\r\n        count={_pages}\r\n        page={_page}\r\n        onChange={handleChangePage}\r\n        showFirstButton\r\n        showLastButton\r\n        color=\"secondary\"\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nCategory.propTypes = {\r\n  data: PropTypes.instanceOf(Array),\r\n  nCol: PropTypes.number,\r\n  nRow: PropTypes.number,\r\n  page: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  pages: PropTypes.number,\r\n  isServerPaging: PropTypes.bool,\r\n};\r\n\r\nCategory.defaultProps = {\r\n  data: [],\r\n  nCol: 4,\r\n  nRow: 5,\r\n  page: 1,\r\n  pages: 13,\r\n  onChangePage: () => {},\r\n  isServerPaging: false,\r\n};\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}