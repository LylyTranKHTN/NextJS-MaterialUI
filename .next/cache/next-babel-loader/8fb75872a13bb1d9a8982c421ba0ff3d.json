{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nextjs\\\\shoponline\\\\src\\\\components\\\\CustomDropdown\\\\CustomDropdown.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { Grow, Grid, Paper, Popper } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/components/customDropdownStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomDropdown(props) {\n  _s();\n\n  var _classNames,\n      _classNames2,\n      _classNames3,\n      _this = this;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  var handleCloseAway = function handleCloseAway(event) {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n\n    setAnchorEl(null);\n  };\n\n  var classes = useStyles();\n  var buttonText = props.buttonText,\n      buttonIcon = props.buttonIcon,\n      dropdownList = props.dropdownList,\n      buttonProps = props.buttonProps,\n      dropup = props.dropup,\n      caret = props.caret,\n      hoverColor = props.hoverColor,\n      left = props.left,\n      rtlActive = props.rtlActive,\n      noLiPadding = props.noLiPadding;\n  var caretClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.caret, true), _defineProperty(_classNames, classes.caretActive, Boolean(anchorEl)), _defineProperty(_classNames, classes.caretRTL, rtlActive), _classNames));\n  var dropdownItem = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.dropdownItem, true), _defineProperty(_classNames2, classes[hoverColor + \"Hover\"], true), _defineProperty(_classNames2, classes.noLiPadding, noLiPadding), _defineProperty(_classNames2, classes.dropdownItemRTL, rtlActive), _classNames2));\n  var icon = null;\n\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = __jsx(props.buttonIcon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      });\n      break;\n\n    case \"string\":\n      icon = __jsx(Icon, {\n        className: classes.buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      }, props.buttonIcon);\n      break;\n\n    default:\n      icon = null;\n      break;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Button, _extends({\n    \"aria-label\": \"Notifications\",\n    \"aria-owns\": anchorEl ? \"menu-list\" : null,\n    \"aria-haspopup\": \"true\"\n  }, buttonProps, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), icon, buttonText !== undefined ? buttonText : null, caret ? __jsx(\"b\", {\n    className: caretClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 20\n    }\n  }) : null)), __jsx(Popper, {\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    disablePortal: true,\n    placement: dropup ? left ? \"top-start\" : \"top\" : left ? \"bottom-start\" : \"bottom\",\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.popperClose, !anchorEl), _defineProperty(_classNames3, classes.popperResponsive, true), _classNames3)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, function () {\n    return __jsx(Grow, {\n      \"in\": Boolean(anchorEl),\n      id: \"menu-list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.dropdown,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleCloseAway,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, dropdownList.map(function (m) {\n      return __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 12 / dropdownList.length,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, __jsx(MenuList, {\n        role: \"menu\",\n        className: classes.menuList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, m.title !== undefined ? __jsx(MenuItem, {\n        className: classes.dropdownHeader,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, __jsx(Link, {\n        href: m.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }\n      }, m.title)) : null, m.subMenu && m.subMenu.map(function (prop, key) {\n        if (prop.divider) {\n          return __jsx(Divider, {\n            key: key,\n            className: classes.dropdownDividerItem,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }\n          });\n        }\n\n        return __jsx(MenuItem, {\n          key: key,\n          className: dropdownItem,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 27\n          }\n        }, __jsx(Link, {\n          href: prop.url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }\n        }, prop.title));\n      })));\n    })))));\n  }));\n}\n\n_s(CustomDropdown, \"rR4YbuwDsNH7kIPxRuzEnRkbEdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomDropdown;\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\",\n  dropup: true\n};\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\"black\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"sources":["D:/nextjs/shoponline/src/components/CustomDropdown/CustomDropdown.js"],"names":["React","classNames","PropTypes","Link","makeStyles","MenuItem","MenuList","ClickAwayListener","Grow","Grid","Paper","Popper","Divider","Icon","Button","styles","useStyles","CustomDropdown","props","useState","anchorEl","setAnchorEl","handleClick","event","contains","target","currentTarget","handleCloseAway","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","Boolean","caretRTL","dropdownItem","dropdownItemRTL","icon","undefined","popperClose","popperResponsive","dropdown","map","m","length","menuList","title","dropdownHeader","url","subMenu","prop","key","divider","dropdownDividerItem","defaultProps","propTypes","oneOf","node","oneOfType","object","string","array","bool","onClick","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { Grow, Grid, Paper, Popper } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-kit-react/components/customDropdownStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomDropdown(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleCloseAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(null);\n  };\n  const classes = useStyles();\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    caret,\n    hoverColor,\n    left,\n    rtlActive,\n    noLiPadding\n  } = props;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretActive]: Boolean(anchorEl),\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  let icon = null;\n  switch (typeof buttonIcon) {\n    case \"object\":\n      icon = <props.buttonIcon className={classes.buttonIcon} />;\n      break;\n    case \"string\":\n      icon = <Icon className={classes.buttonIcon}>{props.buttonIcon}</Icon>;\n      break;\n    default:\n      icon = null;\n      break;\n  }\n  return (\n    <div>\n      <div>\n        <Button\n          aria-label=\"Notifications\"\n          aria-owns={anchorEl ? \"menu-list\" : null}\n          aria-haspopup=\"true\"\n          {...buttonProps}\n          onClick={handleClick}\n        >\n          {icon}\n          {buttonText !== undefined ? buttonText : null}\n          {caret ? <b className={caretClasses} /> : null}\n        </Button>\n      </div>\n      <Popper\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        disablePortal\n        placement={\n          dropup\n            ? left\n              ? \"top-start\"\n              : \"top\"\n            : left\n            ? \"bottom-start\"\n            : \"bottom\"\n        }\n        className={classNames({\n          [classes.popperClose]: !anchorEl,\n          [classes.popperResponsive]: true\n        })}\n      >\n        {() => (\n          <Grow\n            in={Boolean(anchorEl)}\n            id=\"menu-list\"\n          >\n            <Paper className={classes.dropdown}>\n              <ClickAwayListener onClickAway={handleCloseAway}>\n                <Grid container spacing={5}>\n                  {dropdownList.map((m) => (\n                    <Grid item xs={12} md={12/dropdownList.length}>\n                    <MenuList role=\"menu\" className={classes.menuList}>\n                      {m.title !== undefined ? (\n                        <MenuItem\n                          className={classes.dropdownHeader}\n                        >\n                          <Link href={m.url}>{m.title}</Link>\n                        </MenuItem>\n                      ) : null}\n                      {m.subMenu && m.subMenu.map((prop, key) => {\n                        if (prop.divider) {\n                          return (\n                            <Divider\n                              key={key}\n                              className={classes.dropdownDividerItem}\n                            />\n                          );\n                        }\n                        return (\n                          <MenuItem\n                            key={key}\n                            className={dropdownItem}\n                          >\n                            <Link href={prop.url}>{prop.title}</Link>\n                          </MenuItem>\n                        );\n                      })}\n                    </MenuList>\n                    </Grid>\n                  ))}\n                </Grid>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\",\n  dropup: true,\n};\n\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\n    \"black\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}