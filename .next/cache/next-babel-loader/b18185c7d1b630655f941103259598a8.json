{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\LL\\\\LL\\\\ClientWeb\\\\src\\\\components\\\\category\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport { Cart } from 'components';\n\nvar Category = function Category(props) {\n  _s();\n\n  var pages = props.pages,\n      onChangePage = props.onChangePage,\n      nCol = props.nCol,\n      nRow = props.nRow,\n      data = props.data;\n  var sizePerPage = nCol * nRow;\n\n  var _React$useState = React.useState(pages),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _pages = _React$useState2[0],\n      setPages = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.page),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      _page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      _data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (!props.isServerPaging) {\n      console.log('pages', Math.ceil(data / sizePerPage), data / sizePerPage);\n      setPages(Math.ceil(data / sizePerPage));\n    }\n  }, []);\n  React.useEffect(function () {\n    if (!props.isServerPaging) {\n      setData(data.slice((_page - 1) * sizePerPage, _page * sizePerPage));\n    }\n  }, [_page]);\n  /**\r\n   * Handle change page\r\n   * @param {Object} e event\r\n   * @param {Number} page\r\n   */\n\n  var handleChangePage = function handleChangePage(e, page) {\n    setPage(page);\n    onChangePage(page);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, _data.map(function (item, index) {\n    return __jsx(Grid, {\n      key: index,\n      item: true,\n      xs: 6,\n      sm: 12 / nCol,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, __jsx(Cart, _extends({}, item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }), __jsx(Pagination, {\n    count: _pages,\n    page: _page,\n    onChange: handleChangePage,\n    showFirstButton: true,\n    showLastButton: true,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Category, \"ZrNi8K43wRpAxUln+bBqD2587vU=\");\n\n_c = Category;\nCategory.propTypes = {\n  data: PropTypes.instanceOf(Array),\n  nCol: PropTypes.number,\n  nRow: PropTypes.number,\n  page: PropTypes.number,\n  onChangePage: PropTypes.func,\n  pages: PropTypes.number,\n  isServerPaging: PropTypes.bool\n};\nCategory.defaultProps = {\n  data: [],\n  nCol: 4,\n  nRow: 5,\n  page: 1,\n  pages: 13,\n  onChangePage: function onChangePage() {},\n  isServerPaging: false\n};\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/LL/LL/ClientWeb/src/components/category/index.js"],"names":["React","PropTypes","Grid","Pagination","Cart","Category","props","pages","onChangePage","nCol","nRow","data","sizePerPage","useState","_pages","setPages","page","_page","setPage","_data","setData","useEffect","isServerPaging","console","log","Math","ceil","slice","handleChangePage","e","map","item","index","propTypes","instanceOf","Array","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Cart } from 'components';\r\n\r\nconst Category = (props) => {\r\n  const { pages, onChangePage, nCol, nRow, data } = props;\r\n  const sizePerPage = nCol * nRow;\r\n\r\n  const [_pages, setPages] = React.useState(pages);\r\n  const [_page, setPage] = React.useState(props.page);\r\n  const [_data, setData] = React.useState(data);\r\n\r\n  React.useEffect(() => {\r\n    if (!props.isServerPaging) {\r\n      console.log('pages', Math.ceil(data/sizePerPage), data/sizePerPage);\r\n      setPages(Math.ceil(data/sizePerPage));\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (!props.isServerPaging) {\r\n      setData(data.slice((_page - 1) * sizePerPage, _page * sizePerPage));\r\n    }\r\n  }, [_page]);\r\n\r\n  /**\r\n   * Handle change page\r\n   * @param {Object} e event\r\n   * @param {Number} page\r\n   */\r\n  const handleChangePage = (e, page) => {\r\n    setPage(page);\r\n    onChangePage(page);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {_data.map((item, index) => (\r\n        <Grid key={index} item xs={6} sm={12/nCol} >\r\n          <Cart\r\n            {...item}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Pagination\r\n        count={_pages}\r\n        page={_page}\r\n        onChange={handleChangePage}\r\n        showFirstButton\r\n        showLastButton\r\n        color=\"secondary\"\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nCategory.propTypes = {\r\n  data: PropTypes.instanceOf(Array),\r\n  nCol: PropTypes.number,\r\n  nRow: PropTypes.number,\r\n  page: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  pages: PropTypes.number,\r\n  isServerPaging: PropTypes.bool,\r\n};\r\n\r\nCategory.defaultProps = {\r\n  data: [],\r\n  nCol: 4,\r\n  nRow: 5,\r\n  page: 1,\r\n  pages: 13,\r\n  onChangePage: () => {},\r\n  isServerPaging: false,\r\n};\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}