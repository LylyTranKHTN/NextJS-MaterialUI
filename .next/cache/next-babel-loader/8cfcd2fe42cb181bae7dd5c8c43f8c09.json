{"ast":null,"code":"var _jsxFileName = \"D:\\\\LL\\\\LL\\\\ClientWeb\\\\src\\\\components\\\\cart\\\\miniSlider.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, green } from '@material-ui/core/colors';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { ClickAwayListener } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  square: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500]\n  },\n  rounded: {\n    color: '#fff',\n    backgroundColor: green[500]\n  }\n}));\n\nfunction MiniSlider(props) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, props.items.map(item => __jsx(\"div\", {\n    onMouseOver: () => props.onMouseOverItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    variant: \"square\",\n    className: classes.square,\n    src: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))));\n}\n\nMiniSlider.propTypes = {\n  items: PropTypes.instanceOf(Array),\n  onMouseOverItem: PropTypes.func.isRequired\n};\nMiniSlider.defaultProps = {};\nexport default MiniSlider;","map":{"version":3,"sources":["D:/LL/LL/ClientWeb/src/components/cart/miniSlider.js"],"names":["React","PropTypes","makeStyles","Avatar","deepOrange","green","AssignmentIcon","ClickAwayListener","useStyles","theme","root","display","margin","spacing","square","color","palette","getContrastText","backgroundColor","rounded","MiniSlider","props","classes","items","map","item","onMouseOverItem","propTypes","instanceOf","Array","func","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,0BAAlC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ,aAAS;AACPC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFL,GADiC;AAOvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,eAAd,CAA8Bb,UAAU,CAAC,GAAD,CAAxC,CADD;AAENc,IAAAA,eAAe,EAAEd,UAAU,CAAC,GAAD;AAFrB,GAP+B;AAWvCe,EAAAA,OAAO,EAAE;AACPJ,IAAAA,KAAK,EAAE,MADA;AAEPG,IAAAA,eAAe,EAAEb,KAAK,CAAC,GAAD;AAFf;AAX8B,CAAZ,CAAD,CAA5B;;AAiBA,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAK,IAAA,WAAW,EAAE,MAAMJ,KAAK,CAACK,eAAN,CAAsBD,IAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,EAAEH,OAAO,CAACR,MAFrB;AAGE,IAAA,GAAG,EAAEW,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AAaD;;AAEDL,UAAU,CAACO,SAAX,GAAuB;AACrBJ,EAAAA,KAAK,EAAEtB,SAAS,CAAC2B,UAAV,CAAqBC,KAArB,CADc;AAErBH,EAAAA,eAAe,EAAEzB,SAAS,CAAC6B,IAAV,CAAeC;AAFX,CAAvB;AAKAX,UAAU,CAACY,YAAX,GAA0B,EAA1B;AAIA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  square: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  rounded: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n}));\r\n\r\nfunction MiniSlider(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.items.map(item => (\r\n        <div onMouseOver={() => props.onMouseOverItem(item)}>\r\n          <Avatar\r\n            variant=\"square\"\r\n            className={classes.square}\r\n            src={item}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nMiniSlider.propTypes = {\r\n  items: PropTypes.instanceOf(Array),\r\n  onMouseOverItem: PropTypes.func.isRequired,\r\n};\r\n\r\nMiniSlider.defaultProps = {\r\n\r\n}\r\n\r\nexport default MiniSlider;\r\n"]},"metadata":{},"sourceType":"module"}